name: Frontend CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'Frontend/**'

env:
  IMAGE_TAG: ${{ github.sha }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  CONTAINER_NAME: frontend_container
  NETWORK_NAME: app_network
  SSH_HOST: ${{ secrets.SSH_HOST }}
  SSH_USERNAME: ${{ secrets.SSH_USER }}
  SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin

      - name: Build and Push Frontend Docker Image
        run: |
          IMAGE_NAME=${DOCKERHUB_USERNAME}/frontenddmd
          cd Frontend
          docker build -t $IMAGE_NAME:${IMAGE_TAG} .
          docker push $IMAGE_NAME:${IMAGE_TAG}

      - name: Deploy to Remote Server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USERNAME }}
          key: ${{ env.SSH_KEY }}
          script: |
            IMAGE_NAME=${DOCKERHUB_USERNAME}/frontenddmd
            docker pull $IMAGE_NAME:${IMAGE_TAG}
            
            # Stop and remove existing container
            docker stop $CONTAINER_NAME || true
            docker rm $CONTAINER_NAME || true

            # Attempt to run the container with retry
            for i in {1..3}; do
              docker run -d \
                --name $CONTAINER_NAME \
                --network $NETWORK_NAME \
                -p 3000:80 \
                $IMAGE_NAME:${IMAGE_TAG} && break
              echo "Attempt $i failed, retrying in 5 seconds..."
              sleep 5
            done

            # Wait briefly to allow container to start
            sleep 5

            # Check if the container is running
            if docker ps | grep $CONTAINER_NAME; then
              echo "Container $CONTAINER_NAME is running"
            else
              echo "Container $CONTAINER_NAME failed to start after retries"
              docker logs $CONTAINER_NAME
              exit 1
            fi
