name: Frontend CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'Frontend/**'

env:
  IMAGE_TAG: ${{ github.sha }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  FRONTEND_CONTAINER_NAME: frontend_container
  NETWORK_NAME: app_network
  SSH_HOST: ${{ secrets.SSH_HOST }}
  SSH_USERNAME: ${{ secrets.SSH_USER }}
  SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ env.DOCKERHUB_PASSWORD }}" | docker login -u "${{ env.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and Push Frontend Docker Image
        run: |
          IMAGE_NAME=${{ env.DOCKERHUB_USERNAME }}/frontenddmd
          cd Frontend
          docker build -t $IMAGE_NAME:${{ env.IMAGE_TAG }} .
          docker push $IMAGE_NAME:${{ env.IMAGE_TAG }}

      - name: Deploy to Remote Server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USERNAME }}
          key: ${{ env.SSH_KEY }}
          script: |
            set -e

            IMAGE_TAG="${{ env.IMAGE_TAG }}"
            DOCKERHUB_USERNAME="${{ env.DOCKERHUB_USERNAME }}"
            CONTAINER_NAME="${{ env.FRONTEND_CONTAINER_NAME }}"
            IMAGE_NAME="${DOCKERHUB_USERNAME}/frontenddmd"
            NETWORK_NAME="${{ env.NETWORK_NAME }}"

            echo "Pulling frontend image: $IMAGE_NAME:$IMAGE_TAG"
            docker pull "$IMAGE_NAME:$IMAGE_TAG"

            echo "Stopping and removing existing container..."
            docker stop "$CONTAINER_NAME" || true
            docker rm "$CONTAINER_NAME" || true

            echo "Creating network if not exists..."
            docker network inspect "$NETWORK_NAME" >/dev/null 2>&1 || docker network create "$NETWORK_NAME"

            echo "Running container with retry logic..."
            for i in {1..3}; do
              docker run -d \
                --name "$CONTAINER_NAME" \
                --network "$NETWORK_NAME" \
                -p 3000:80 \
                "$IMAGE_NAME:$IMAGE_TAG" && break
              echo "Attempt $i failed, retrying in 5 seconds..."
              sleep 5
            done

            echo "Verifying container startup..."
            sleep 5
            if docker ps | grep "$CONTAINER_NAME"; then
              echo "✅ $CONTAINER_NAME is running."
            else
              echo "❌ $CONTAINER_NAME failed to start."
              docker logs "$CONTAINER_NAME" || echo "No logs available."
              exit 1
            fi
