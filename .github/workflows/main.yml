name: Backend CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'Backend/**'

env:
  IMAGE_TAG: ${{ github.sha }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  BACKEND_CONTAINER_NAME: backend_container
  NETWORK_NAME: app_network
  SSH_HOST: ${{ secrets.SSH_HOST }}
  SSH_USERNAME: ${{ secrets.SSH_USER }}
  SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ env.DOCKERHUB_PASSWORD }}" | docker login -u "${{ env.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and Push Backend Docker Image
        run: |
          IMAGE_NAME=${{ env.DOCKERHUB_USERNAME }}/backenddmd
          cd Backend
          docker build -t $IMAGE_NAME:${{ env.IMAGE_TAG }} .
          docker push $IMAGE_NAME:${{ env.IMAGE_TAG }}

      - name: Deploy to Remote Server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USERNAME }}
          key: ${{ env.SSH_KEY }}
          script: |
            IMAGE_TAG="${{ env.IMAGE_TAG }}"
            BACKEND_IMAGE_NAME="${{ env.DOCKERHUB_USERNAME }}/backenddmd"
            BACKEND_CONTAINER_NAME="${{ env.BACKEND_CONTAINER_NAME }}"
            NETWORK_NAME="${{ env.NETWORK_NAME }}"

            echo "Pulling latest backend image..."
            docker pull $BACKEND_IMAGE_NAME:$IMAGE_TAG

            echo "Stopping and removing previous backend container..."
            docker stop $BACKEND_CONTAINER_NAME || true
            docker rm $BACKEND_CONTAINER_NAME || true

            echo "Creating network if not exists..."
            docker network inspect $NETWORK_NAME >/dev/null 2>&1 || docker network create $NETWORK_NAME

            echo "Starting new backend container..."
            docker run -d \
              --name $BACKEND_CONTAINER_NAME \
              --network $NETWORK_NAME \
              -p 8085:8085 \
              $BACKEND_IMAGE_NAME:$IMAGE_TAG

            echo "âœ… Backend container restarted with new image."
